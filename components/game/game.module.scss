$primary-color: #e43d12;
$secondary-color: #FFA2B6;
$tertiary-color: #D6536D;

:export {
  primaryColor: $primary-color;
}

.shuffleBtn {
  background-color: $primary-color;
  color: white;
  border: none;
  border-radius: 15px;
  padding: 1em;
  margin: 1em;
  cursor: pointer;
  font-size: 1.5em;
}

.intro {
  background-color: $primary-color;
  color: white;
  margin: 1em;
  padding: 1em;
  line-height: 1.5;
  border-radius: 15px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.gameDiv {
  position: relative;
}

.fade5 { animation: fadeIn 5s; }
.fade10 { animation: fadeIn 10s; }

@keyframes fadeIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.showShuffle {
  animation: cssAnimation 0s 5s forwards;
  visibility: hidden;
}

@keyframes cssAnimation {
  to { visibility: visible; }
}

.turnIndicator, .currentTurnCombo {
  padding: 1rem;
  margin: 1rem auto;
  font-weight: bold;
  font-size: large;
  background-color: $primary-color;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  > span {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

.turnIndicator {
  position: fixed;
  bottom: 0;
  left: 0;
  margin: 0;
  width: 100%;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.loading {
  display: inline-block;
  margin-left: 0.5rem;
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255,255,255,.3);
  border-radius: 50%;
  border-top-color: #fff;
  animation: spin 1s ease-in-out infinite;
  -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
  to { -webkit-transform: rotate(360deg); }
}

.validCombo {
  margin-top: 1rem;
  font-size: large;
  background-color: purple;
  color: white;
  padding: 1rem;
}

.middlePile {
  margin: 1rem auto;
  text-align: center;
  width: 100%;
  overflow-x: auto;
  > h2 {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: .5rem;
  }
  > ul, .cardFaceDown {
    margin: 0 auto;
  }
  > ul {
    justify-content: center;
  }
}

.hands {
  display: grid;
}

.gameBoard {
  width: 100%;
  display: grid;
  grid-template-columns: 10% 80% 10%;
  grid-template-rows: 165px 110px 1fr;
  > .middleDiv {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    align-self: center;
    justify-self: center;
    width: 100%;
  }
  > li {
    position: relative;
    align-items: center;
  }
  > li:nth-child(2) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    justify-self: start;
    left: -30px;
    top: 30px;
  }
  > li:nth-child(3) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    justify-self: center;
  }
  > li:nth-child(4) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    justify-self: end;
    right: -30px;
    top: 30px;
  }
}

.containerUser {
  width: 100%;
  grid-column: 1 / 4;
  grid-row: 3 / 4;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  position: relative;
  > div {
    width: 100%;
  }
}

.gameBoard > li:nth-child(2) > .handContainer, .gameBoard > li:nth-child(4) > .handContainer {
  position: relative;
  width: 130px;
  height: 700px;
}

.gameBoard > li:nth-child(2) .rotateDiv, .gameBoard > li:nth-child(4) .rotateDiv {
  position: absolute;
  top: 50%;
  left: 90%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  transform-origin: top left;
}

.gameBoard > li:nth-child(2) .rotateDiv {
  transform: rotate(-270deg) translate(-50%, -50%);
}

.gameBoard > li:nth-child(4) .rotateDiv {
  transform: rotate(-90deg) translate(-50%, -50%);
  left: 14%;
}

.cardFaceDown, .cardDisplay {
  width: 75px;
  height: 105px;
  border: 2px solid black;
  border-radius: 4px;
}

.cardFaceDown {
  background: no-repeat url("../../public/cardBackground.jpg");
}

.cardDisplay {
  background-color: $primary-color;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  font-weight: 500;
  color: white;
}

.roundMessage {
  margin-top: .25rem;
  padding: 4px;
  font-weight: 700;
  background-color: $secondary-color;
  color: white;
}

.turnMessage {
  color: white;
}

.aiMobileHand {
  > h3 {
    font-weight: 700;
    color: $primary-color;
    font-size: 1.05rem;
    margin-bottom: .5rem;
  }
  > .divMobileFaces {
    position: relative;
    > .badgePassed {
      position: absolute;
      top: 0;
      right: 0;
      border: 2px solid black;
      border-top-right-radius: 4px;
      padding: .25rem;
      font-weight: 700;
      background-color: #fff;
    }
  }
}

.hideBadge {
  opacity: .25;
}

.containerUser > .badgePassed {
  width: fit-content;
  right: 0;
  font-size: 1.15rem;
}

.winner {
  padding: 1rem;
  margin: -1rem;
  background-color: yellow;
}

.star {
  width: 20px;
  height: auto;
}

.btnPlayAgain {
  display: block;
  margin: 1rem auto 0 auto;
  width: 100%;
  padding: 3px;
  border: 1px solid white;
  background: white;
}

.hide {
  display: none !important;
}

.divSortBtns {
  display: flex;
  align-items: center;
  > button {
    width: 20px;
    height: auto;
  }
  > button:first {
    margin-right: 1rem;
  }
}

@media (min-width: 568px) {
}

@media (max-width: 586px) {
  .handContainer {
    display: none;
  }
}

@media (min-width: 767px) {
  .containerUser {
    width: 80%;
    margin: 0 auto;
  }

  .gameBoard > li:nth-child(2) {
    top: 45px;
  }

  .gameBoard > li:nth-child(4) {
    top: 45px;
  }
}

@media (min-width: 1024px) {
  .gameBoard {
    grid-template-columns: 20% 60% 20%;
    grid-template-rows: 200px 200px 1fr;
  }

  .gameBoard > li:nth-child(2) {
    grid-column: 1 / 2;
    justify-self: center;
    align-self: end;
    position: initial;
  }

  .gameBoard > li:nth-child(4) {
    grid-column: 3 / 4;
    justify-self: center;
    align-self: end;
    position: initial;
  }

  .containerUser {
    width: 100%;
    grid-column: 2 / 3;
  }

  .gameBoard > li:nth-child(2) > .handContainer, .gameBoard > li:nth-child(4) > .handContainer {
    position: relative;
    width: 130px;
    height: 400px;
  }  
}

/* Width Height for Hand in Tablet/Desktop View
  width: 130px;
  height: 700px; 
*/